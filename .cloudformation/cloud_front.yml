AWSTemplateFormatVersion: '2010-09-09'
Description: Static contents distribution using CloudFront for elastic Beanstalk.

Parameters:
  AppEnvironment:
    Description: Type of app environment.
    Type: String
    Default: staging
    AllowedValues:
      - staging
      - production
  ErrorCacheTTL:
    Description: The error cache time in seconds.
    Type: String
    Default: 1
  EbAlbDnsName:
    Description: Type of this AlB domain name like "staging-alb-origin.diycities.jp"
    Type: String
  DomainAliases:
    Description: Type of this CNAME domain name like "staging.diycities.jp,stagingtest.diycities.jp"
    Type: CommaDelimitedList
  CFSSLCertificateId:
    Description: Type of this SSL id
    Type: String
  WebACLArn:
    Description: Type of this AWS WAF arn
    Type: String

Resources:
  # ------------------------------------------------------------#
  #  S3 Bucket
  # ------------------------------------------------------------#
  CloudFrontLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AppEnvironment}-cfj-decidim-cloudfront-log
      AccessControl: LogDeliveryWrite
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${AppEnvironment}-cfj-decidim-cloudfront-log-life-cycle
            Status: Enabled
            Prefix: logs/
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub ${AppEnvironment}-cfj-decidim

  S3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Sub ${AppEnvironment}-cfj-decidim
      PolicyDocument:
        Version: "2008-10-17"
        Id: "PolicyForCloudFrontPrivateContent"
        Statement:
          - Sid: "1"
            Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${AppEnvironment}-cfj-decidim/*"


  # ------------------------------------------------------------#
  #  CloudFront
  # ------------------------------------------------------------#
  StaticCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 600
        MinTTL: 60
        MaxTTL: 3600
        Name: !Sub ${AppEnvironment}-decidim-static-cache-policy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all

  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !Ref DomainAliases
        Comment: !Sub ${AppEnvironment} cfj-decidim app
        Enabled: true
        Logging:
          IncludeCookies: false
          Bucket: !GetAtt CloudFrontLogBucket.DomainName
          Prefix: logs/
        Origins:
        - Id: appEbOrigin
          DomainName: !Ref EbAlbDnsName
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: https-only
            OriginReadTimeout: 60
        - Id: !Sub "${AppEnvironment}-cfj-decidim.s3.ap-northeast-1.amazonaws.com"
          DomainName: !Sub "${AppEnvironment}-cfj-decidim.s3.ap-northeast-1.amazonaws.com"
          S3OriginConfig:
            OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - DELETE
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: false
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
          TargetOriginId: appEbOrigin
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          Quantity: 2
          Items:
            -
              PathPattern: assets/*
              TargetOriginId: appEbOrigin
              CachePolicyId: !GetAtt StaticCachePolicy.Id
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
              Compress: true
            -
              PathPattern: uploads/*
              TargetOriginId: !Sub "${AppEnvironment}-cfj-decidim.s3.ap-northeast-1.amazonaws.com"
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - HEAD
                - GET
              Compress: true
              CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        HttpVersion: http2
        PriceClass: PriceClass_All
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
          AcmCertificateArn: !Sub "arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${CFSSLCertificateId}"
        CustomErrorResponses:
          - ErrorCode: 400
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 403
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 404
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 500
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 502
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 503
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
          - ErrorCode: 504
            ErrorCachingMinTTL: !Ref ErrorCacheTTL
        WebACLId: !Ref WebACLArn
      Tags:
        - Key: Name
          Value: !Sub ${AppEnvironment}-decidim-cfj-cloud-front

  OriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "画面用s3にアクセスする用"

name: Deploy to decidim-cfj cdk

on:
  push:
    branches:
      - develop
      - master
    tags:
      - 'v*'

env:
  AWS_ROLE_ARN: arn:aws:iam::887442827229:role/GithubActions_decidim-cfj-cdk-deploy

jobs:
  create-app-env:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      actions: write
      contents: read
      id-token: write
    outputs:
      image-tag: ${{ steps.output-app-env.outputs.image-tag }}
      eb-environment-name: ${{ steps.output-app-env.outputs.eb-environment-name }}

    steps:
      - uses: actions/checkout@v3

      - name: Set env to staging
        id: set-env-staging
        if: endsWith(github.ref, 'heads/develop')
        run: |
          echo "IMAGE_TAG_PREFIX=staging" >> $GITHUB_ENV
          echo "EB_ENVIRONMENT_NAME=staging" >> $GITHUB_ENV

      - name: Set env to production
        id: set-env-production
        if: endsWith(github.ref, 'heads/master') || contains(github.ref, 'tags/v')
        run: |
          echo "IMAGE_TAG_PREFIX=production-v0-25-2" >> $GITHUB_ENV
          echo "EB_ENVIRONMENT_NAME=production-v0-25-2" >> $GITHUB_ENV

      - name: Output App Env
        id: output-app-env
        run: |
          echo "image-tag=${IMAGE_TAG_PREFIX}-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          echo "eb-environment-name=${EB_ENVIRONMENT_NAME}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 1200
    needs: create-app-env

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        if: endsWith(github.ref, 'heads/master') || endsWith(github.ref, 'heads/develop')
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ needs.create-app-env.outputs.image-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 1800
    if: endsWith(github.ref, 'heads/develop') || contains(github.ref, 'tags/v')
    permissions:
      actions: write
      contents: read
      id-token: write
    needs:
      - create-app-env
      - build

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check if ECR Image exists with tag
        if: contains(github.ref, 'tags/v')
        env:
          IMAGE_TAG: ${{ needs.create-app-env.outputs.image-tag }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          EXIT_CODE=0
          aws ecr describe-images --repository-name=$ECR_REPOSITORY --image-ids=imageTag=$IMAGE_TAG 2> /dev/null || EXIT_CODE=$?

          if [[ $EXIT_CODE != 0 ]]; then
              echo "${IMAGE_TAG} image tag not found"
              exit 1
          fi

      - uses: actions/setup-python@master
        with:
          python-version: "3.7"

      - name: Install awsebcli
        run: pip install -U awsebcli

      - name: Checkout decidim-cfj cdk
        uses: actions/checkout@v3
        with:
          repository: codeforjapan/decidim-cfj-cdk
          path: decidim-cfj-cdk

      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          cdk_version: '2.50.0'
          actions_comment: true
          cdk_args: '--context stage=$EB_ENVIRONMENT_NAME --context tag=$IMAGE_TAG --require-approval never'
          working_dir: 'decidim-cfj-cdk'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_DEFAULT_REGION: 'ap-northeast-1'
          EB_ENVIRONMENT_NAME: ${{ needs.create-app-env.outputs.eb-environment-name }}
          IMAGE_TAG: ${{ needs.create-app-env.outputs.image-tag }}
